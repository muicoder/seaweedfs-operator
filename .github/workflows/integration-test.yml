name: Integration Tests

on:
  pull_request:
    types:
      - opened
      - labeled
      - synchronize
    paths:
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'
      - 'Makefile'
      - '.github/workflows/integration-test.yml'
      - 'config/**'
  push:
    branches:
      - mainNot
      - masterNot
    paths:
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'
      - 'Makefile'
      - '.github/workflows/integration-test.yml'
      - 'config/**'

jobs:
  integration-test:
    name: Integration Tests on k8s ${{ matrix.k8s.version }}
    # Pull request has label 'ok-to-test' or the author is a member of the organization, or it's a push to main/master
    if: |
      github.event_name == 'push' || 
      contains(github.event.pull_request.labels.*.name, 'ok-to-test') || 
      contains(fromJSON('["COLLABORATOR", "MEMBER", "OWNER"]'), github.event.pull_request.author_association)
    
    strategy:
      fail-fast: false
      matrix:
        k8s:
          - version: v1.29.0
            attribute: previous
          - version: v1.30.0
            attribute: current
          - version: v1.31.0
            attribute: latest
    
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.30.0'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run unit tests
        run: make test

      - name: Run linter
        run: make lint

      - name: Build manager binary
        run: make build

      - name: Set up Kind cluster
        run: |
          # Use specific Kubernetes version
          K8S_VERSION=${{ matrix.k8s.version }} make kind-prepare
        env:
          KIND_CLUSTER_NAME: seaweedfs-operator-kind-${{ github.run_id }}

      - name: Build and load Docker image
        run: |
          make docker-build
          make kind-load
        env:
          KIND_CLUSTER_NAME: seaweedfs-operator-kind-${{ github.run_id }}
          IMG: ghcr.io/seaweedfs/seaweedfs-operator:test-${{ github.run_id }}

      - name: Deploy operator
        run: |
          make deploy
          # Wait for the operator to be ready
          kubectl wait deployment.apps/seaweedfs-operator-controller-manager \
            --for condition=Available \
            --namespace seaweedfs-operator-system \
            --timeout 300s
        env:
          KIND_CLUSTER_NAME: seaweedfs-operator-kind-${{ github.run_id }}
          IMG: ghcr.io/seaweedfs/seaweedfs-operator:test-${{ github.run_id }}

      - name: Run integration tests
        run: |
          # Run all e2e tests including the new resource integration tests
          go test ./test/e2e/ -v -ginkgo.v -ginkgo.progress -timeout 20m
        env:
          KIND_CLUSTER_NAME: seaweedfs-operator-kind-${{ github.run_id }}

      - name: Collect operator logs on failure
        if: failure()
        run: |
          echo "=== Operator Manager Logs ==="
          kubectl logs -n seaweedfs-operator-system deployment/seaweedfs-operator-controller-manager --tail=100 || true
          
          echo "=== All Pods in operator namespace ==="
          kubectl get pods -n seaweedfs-operator-system || true
          
          echo "=== All Pods in test namespace ==="
          kubectl get pods -n test-resources || true
          
          echo "=== Events ==="
          kubectl get events --all-namespaces --sort-by='.lastTimestamp' --tail=50 || true
          
          echo "=== StatefulSets ==="
          kubectl get statefulsets --all-namespaces || true
          
          echo "=== Seaweed Resources ==="
          kubectl get seaweed --all-namespaces -o yaml || true

      - name: Cleanup
        if: always()
        run: |
          # Cleanup the Kind cluster
          make kind-delete || true
        env:
          KIND_CLUSTER_NAME: seaweedfs-operator-kind-${{ github.run_id }}

  resource-validation-test:
    name: Resource Validation Test
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Run resource filtering unit tests
        run: |
          go test ./internal/controller/ -run TestFilterContainerResources -v

      - name: Validate helper function behavior
        run: |
          echo "Testing that storage resources are properly filtered..."
          go test ./internal/controller/ -run TestFilterContainerResources -v
          
          echo "Verifying filter function exists and compiles..."
          go build -o /dev/null ./internal/controller/

  build-check:
    name: Build Check
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Check if code compiles
        run: |
          go mod tidy
          make build

      - name: Check if Docker image builds
        run: |
          make docker-build
        env:
          IMG: test-image:latest 